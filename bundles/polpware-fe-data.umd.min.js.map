{"version":3,"sources":["ng://@polpware/fe-data/lib/relational/table.ts","ng://@polpware/fe-data/lib/relational/dummy-records.ts","ng://@polpware/fe-data/lib/relational/database.ts","ng://@polpware/fe-data/lib/net/xhr-promise.ts","ng://@polpware/fe-data/lib/net/curl.ts","node_modules/tslib/tslib.es6.js","ng://@polpware/fe-data/lib/cache/memory-backend.ts","ng://@polpware/fe-data/lib/decorators/observable.decorator.ts","ng://@polpware/fe-data/lib/cache/sliding-expiration-cache.ts","ng://@polpware/fe-data/lib/security/interfaces.ts","ng://@polpware/fe-data/lib/security/policy-base.ts","ng://@polpware/fe-data/lib/security/oauth-token-policy.ts","ng://@polpware/fe-data/lib/security/open-id-policy.ts","ng://@polpware/fe-data/lib/security/null-policy.ts","ng://@polpware/fe-data/lib/security/user-credential.ts","ng://@polpware/fe-data/lib/security/antiforgerykey-policy.ts","ng://@polpware/fe-data/lib/security/oauth-token-ext-policy.ts","ng://@polpware/fe-data/lib/generic-store/reducers/collection.reducer.ts","ng://@polpware/fe-data/lib/generic-store/reducers/index.ts","ng://@polpware/fe-data/lib/generic-store/factory.ts","ng://@polpware/fe-data/lib/generic-store/collection-abstract.store.ts","ng://@polpware/fe-data/lib/generic-store/collection.store.ts","ng://@polpware/fe-data/lib/backend/aggregate-collection.ts","ng://@polpware/fe-data/lib/backend/event-hub.ts","ng://@polpware/fe-data/lib/backend/provider.ts","ng://@polpware/fe-data/lib/storage/localstorage-util.ts","ng://@polpware/fe-data/lib/storage/localstorage-table.ts","ng://@polpware/fe-data/lib/i18n/dict.ts","ng://@polpware/fe-data/lib/i18n/resource-loader.ts"],"names":["backbone","dependencies.backbone","_","dependencies.underscore","cjs","dependencies.constraintjs","RelationalTable","options","dummyRecords","_this","this","_name","name","_cascade","_foreignRelation","_reverseForeignRelation","dataProviderCtor","_dataProvider","ctor","Collection","extend","dataProviderCtorOption","_addConstraint","constraint","_deleteConstraint","_onDeletedHandler","args","_i","arguments","length","onDeleted","onChange","Object","defineProperty","prototype","dataProvider","hasAnyReference","item","get","id","revRelations","hasFound","revK","hasOwnProperty","revTables","some","fromTable","fromTableDataProvider","filter","findWhere","removeReverseForeign","removedItems","revRelation","forEach","reverseTable","toBeRemoved","anyItems","where","pushArray","destroyFromTable","thatItem","removedItem","remove","set","trigger","getForeignModel","foreignKey","value","attributes","getDummyRecord","add","model","selfContext","modelId","addedItem","newAttr","addMany","models","map","addForeignRelation","foreignTable","Error","addReverseForeignRelation","reverseForeignKey","table","reverseTables","findIndex","elem","push","hasForeignRelation","hasReverseForeignRelation","destroy","offChange","reset","DummyRecords","_data","key","Model","RelationDatabase","_referenceCounter","_tableCollection","_dummyRecords","getReference","addTable","getTable","addForeignkey","foreignName","k","XHR","dependencies.XHR","defaultOptions","async","content_type","response_type","requestheaders","success_scope","error_scope","scope","tools","dependencies.Tools","$","dependencies.jquery","loadJsonUriP","url","ajax","cache","dataType","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","__extends","__","constructor","create","__assign","assign","t","s","i","n","call","apply","__decorate","decorators","target","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","error","MemoryBackend","_store","keys","index","enabled","EventDispatcher","dependencies.EventDispatcher","getEventDispatcher","obj","_eventDispatcher","toggleEvent","state","isNative","toggleNativeEvent","observableDecorator","_super","class_1","tslib_1.__extends","fire","evt","bubble","removed","newEvt","parent","parent_1","isPropagationStopped","on","callback","prepend","off","once","hasEventListeners","has","locache","dependencies.locache","meld","dependencies.meld","originalRemove","getPrototypeOf","currentTime","Date","getTime","SlidingExpirationCache","_defaultSeconds","scheduleInterval","ngZone","backend","_cache","createCache","storage","around","input","onExpireEvtName","onExpireEventName","asObservable","isDefaultPrevented","resetExpireKey","proceed","afterRemoveEvtName","afterRemoveEventName","runOutsideAngular","_timeInterval","setInterval","cleanup","seconds","expirekey","ms","afterRemoveCallback","valueKey","hasExpired","rmOnExpireHandler","addOnExpireHandler","clearInterval","DummyOAuthTokenCtorParams","clientId","clientSecret","PolicyBase","settings","token","getTokenP","isEmpty","isExpired","getTokenInternal","then","lift","adaptToOAuthToken","data","expiresIn","createdOn","refreshToken","OAuthTokenPolicy","readFrom","persistent","getParams","client_id","client_secret","grant_type","grantType","params","method","resp","expires_in","safeParseInt","applyTo","beforeSend","xhr","setRequestHeader","concat","applyToV2","headers","Authorization","applyToV3","OpenIDPolicy","_openId","openId","NullPolicy","UserCredential","authPolicy","_user","_security","security","setUser","isEquiva","a","isArray","checked","objectB","objectA","extendUser","newData","getUser","subscribe","handler","likeBehaviorSubject","unSubscribe","isUserKnown","username","isAuthenticated","AntiForgeryKeyPolicy","_antiForgeryKey","antiForgeryKey","_elementTag","elementTag","_expired","inputField","ret","doc","elm","DOMParser","parseFromString","find","eq","attr","liftWithGuard","isGoodToken","OAuthTokenExtPolicy","payload","_payload","reducer","action","type","x","items","y","__spread","newItems","buildInitialState","collection","buildReducerMap","fromCollection.reducer","factory","actionSubject","ngrxStore.ActionsSubject","scannerActionSubject","ngrxStore.ScannedActionsSubject","actionReducerFactory","ngrxStore.combineReducers","reducerManager","ngrxStore.ReducerManager","reducerIndex.buildReducerMap","stateObservable","ngrxStore.State","ngrxStore.Store","CollectionAbstractStore","getStore","dispatch","modify","CollectionStore","getState","select","Injectable","when","dependencies.when","AggregateCollection","_providerGenerator","_workingProviders","hasNextPage","hasMore","getFirstPage","getNext","providers","totalPages","totalRecords","promises","getNextPage","settle","func","mountSyncBeforeAdvice","before","mountSyncAroundAdvice","mountAjaxBeforeAdvice","DataFlow","dependencies['dataflow']","dependencies['backbone']","endPointEnum","pagedCollection","syncMethodEnum","read","patch","update","delete","globalConfigurationMapping","mountedFeatureRemovers","GlobalProvider","ctorOptions","_dataflow","_myEndPointKeys","_host","webhost","_uniqueNamePrefix","replace","mountFeatures","remover","methodKey","endPointKey","cfgOptions","deleteUrl","deleteContentType","contentType","updateUrl","updateContentType","createUrl","createContentType","patchUrl","patchContentType","policyDelegate","securityDelegate","extraParams","JSON","parse","urlEncode","jointpoint","cfg","syncDelegate","addEndPoint","tag","cfgMapping","configurationMapping","dataflow","uniqueName","getEndPoint","ignoreCache","cachedValue","PageableCollection","getConfiguration","addWhenCallback","addDependency","src","dst","cleanupCache","cleanMountedFeatures","globalLocalStorage","window","localStorage","externalInterface.underscore","union","getEntity","ty","defaultValue","tmp","getItem","isType","ex","console","log","updateEntity","setItem","stringify","cleanEntity","LocalStorageTable","getP","localStorageUtil.getEntity","polpwareUtil.tyObject","polpwareUtil.lift","removeP","localStorageUtil.cleanEntity","updateP","localStorageUtil.updateEntity","_i18n","dependencies.I18n","I18n","getDictByCode","code","translate","text","defaultText","recycleOthers","recycleList","isString","getByNamespace","repo","identifiers","startLevel","restKey","slice","join","initRepo","ResourceLoader","_configuration","register","uri","liveSeconds","configuration","undoRegister","getPromise","fullyQualifiedNamespace","convertor","split","topIdentifier","entry","content","sendPromise","Promise","resolve","reject","xhrSettings","success","output","response","send","pingP","ajaxParams","loadHtmlP","adaptToOpenIDToken","mountSyncListener","insertEntities","upperBound","currentData","tyArray","findEntityById","Id","removeEntityById","splice","insertOrUpdateEntity","entity","cleanEntityGroup","prefix","indexOf","removeItem"],"mappings":"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","sourcesContent":["/**\n * @fileOverview\n * Defines a table in a relational database.\n * This table is observable, i.e., any change on this table will be notified to its listeners.\n */\n\nimport * as dependencies from '@polpware/fe-dependencies';\nimport { pushArray } from '@polpware/fe-utilities';\nimport {\n    IModelLike,\n    IBackboneCollectionLike,\n    IFullBackboneCollectionLike,\n    IFullModelLike\n} from '../interfaces/backbone.interface';\nimport { DummyRecords } from './dummy-records';\n\nconst backbone = dependencies.backbone;\nconst _ = dependencies.underscore;\nconst cjs = dependencies.constraintjs;\n\nexport interface IRelationalTableOptions {\n    name: string;\n    cascade?: boolean;\n    dataProviderCtor?: any;\n    dataProviderCtorOption?: any;\n}\n\nexport interface IRelationalTable {\n    name: string;\n    cascade: boolean;\n    dataProvider(): IFullBackboneCollectionLike;\n    get(id: any): IFullModelLike;\n    add(model: object): IFullModelLike;\n    addMany(models: any[]): IFullModelLike[];\n    addForeignRelation(foreignKey: string, foreignTable: IRelationalTable): void;\n    addReverseForeignRelation(reverseForeignKey: string, table: IRelationalTable): void;\n    hasForeignRelation(foreignKey: string): boolean;\n    hasReverseForeignRelation(reverseForeignKey: string): boolean;\n    destroy(): void;\n}\n\nexport class RelationalTable implements IRelationalTable {\n\n    private _name: string;\n    private _cascade: boolean;\n    private _addConstraint: any;\n    private _deleteConstraint: any;\n    private _foreignRelation: { [key: string]: IRelationalTable };\n    private _reverseForeignRelation: { [key: string]: IRelationalTable[] };\n\n    private _dataProvider: IFullBackboneCollectionLike;\n    private _onDeletedHandler: any;\n\n    constructor(options: IRelationalTableOptions,\n        public dummyRecords: DummyRecords) {\n\n        this._name = options.name;\n        this._cascade = false;\n\n        this._foreignRelation = {};\n        this._reverseForeignRelation = {};\n\n\n        if (options.dataProviderCtor) {\n            this._dataProvider = new options.dataProviderCtor();\n        } else {\n            const ctor = backbone.Collection.extend(options.dataProviderCtorOption || {});\n            this._dataProvider = new ctor();\n        }\n\n        this._addConstraint = cjs.constraint([]);\n        this._deleteConstraint = cjs.constraint([]);\n\n        // Todo: Figure out parameters\n        this._onDeletedHandler = (...args: any[]) => {\n            this.onDeleted();\n        };\n\n        // Set up constraint\n        this._deleteConstraint.onChange(this._onDeletedHandler);\n    }\n\n    public get name(): string {\n        return this._name;\n    }\n\n    public get cascade(): boolean {\n        return this._cascade;\n    }\n\n    public dataProvider(): IFullBackboneCollectionLike {\n        return this._dataProvider;\n    }\n\n    // TODO: Figure out ...\n    public onDeleted() {\n    }\n\n    /**\n     * Check if the given items are still in use.\n     */\n    private hasAnyReference(item: IModelLike): boolean {\n        // Check if this item is in this table or not\n        const itemInTable = this._dataProvider.get(item.id);\n        if (!itemInTable) {\n            return false;\n        }\n\n        const revRelations = this._reverseForeignRelation;\n        let hasFound = false;\n        for (const revK in revRelations) {\n            if (revRelations.hasOwnProperty(revK)) {\n                const revTables = revRelations[revK];\n                hasFound = _.some(revTables, (fromTable) => {\n                    const fromTableDataProvider = fromTable.dataProvider();\n                    const filter = {};\n                    filter[revK] = item.id;\n                    const anyUse = fromTableDataProvider.findWhere(filter);\n                    return !!anyUse;\n                });\n                if (hasFound) {\n                    break;\n                }\n            }\n        }\n\n        return hasFound;\n    }\n\n    /**\n     * Removing any items in other tables which depend on the deleted item.\n     */\n    private removeReverseForeign(removedItems: IModelLike[]): void {\n        const revRelation = this._reverseForeignRelation;\n        for (const revK in revRelation) {\n            if (revRelation.hasOwnProperty(revK)) {\n                const revTables = revRelation[revK];\n                revTables.forEach((reverseTable) => {\n                    const dataProvider = reverseTable.dataProvider();\n                    const toBeRemoved = [];\n                    removedItems.forEach((item) => {\n                        const filter = {};\n                        filter[revK] = item.id;\n                        const anyItems = dataProvider.where(filter);\n                        pushArray(toBeRemoved, anyItems);\n                    });\n                    toBeRemoved.forEach((item) => {\n                        item.destroyFromTable();\n                    });\n                });\n            }\n        }\n    }\n\n    /**\n     * Gets the model in the table by id.\n     */\n    get(id: any): IFullModelLike {\n        return this._dataProvider.get(id);\n    }\n\n    private destroyFromTable(thatItem: IModelLike): void {\n        const removedItem = this._dataProvider.remove(thatItem);\n        if (!removedItem) {\n            return;\n        }\n        // Notify of its collection\n        removedItem.set('invalidated', true);\n        removedItem.trigger('destroy', removedItem);\n\n        this.removeReverseForeign([removedItem]);\n    }\n\n    private getForeignModel(thatItem: IModelLike, foreignKey: string): IModelLike {\n        const value = thatItem.attributes[foreignKey];\n\n        // If we do not have this foreignKey, then return a dummy one\n        if (!value) {\n            return this.dummyRecords.getDummyRecord(foreignKey);\n        }\n\n        const table = this._foreignRelation[foreignKey];\n        return table.dataProvider().get(value);\n    }\n\n    /**\n     * Adds an item in the Table and recursively add foreign items.\n     */\n    add(model: object): IFullModelLike {\n\n        const selfContext = this;\n\n        const dataProvider = this._dataProvider;\n        const foreignRelation = this._foreignRelation;\n\n        // Check if the item to be added is already in this table.\n        const modelId = dataProvider.modelId(model);\n        let addedItem = dataProvider.get(modelId);\n\n        if (addedItem) {\n            const newAttr = _.extend({}, addedItem.attributes, model);\n            addedItem.set(newAttr);\n            return addedItem;\n        }\n\n        // Otherwise a new item\n        addedItem = dataProvider.add(model);\n\n        // Add convenient methods\n        addedItem.destroyFromTable = function() {\n            const thatItem = this;\n            selfContext.destroyFromTable(thatItem);\n        };\n\n        addedItem.getForeignModel = function(foreignKey: string): IModelLike {\n            const thatItem = this;\n            return selfContext.getForeignModel(thatItem, foreignKey);\n        };\n\n        addedItem.hasAnyReference = function(): boolean {\n            const thatItem = this;\n            return selfContext.hasAnyReference(thatItem);\n        };\n\n        return addedItem;\n    }\n\n    /**\n     * Add many items into a table.\n     */\n    addMany(models: any[]): IFullModelLike[] {\n        return models.map(model => {\n            return this.add(model);\n        });\n    }\n\n    /**\n     * Adds a foreign relation.\n     */\n    addForeignRelation(foreignKey: string, foreignTable: IRelationalTable): void {\n        if (this._foreignRelation[foreignKey]) {\n            throw new Error('Foreign key exists: ' + foreignKey);\n        }\n        this._foreignRelation[foreignKey] = foreignTable;\n    }\n\n    /**\n     * Add a reverse foreign relation.\n     */\n    addReverseForeignRelation(reverseForeignKey: string, table: IRelationalTable): void {\n        const reverseTables = this._reverseForeignRelation[reverseForeignKey];\n        if (reverseTables) {\n            const index = reverseTables.findIndex((elem) => {\n                return elem === table;\n            });\n\n            if (index !== -1) {\n                throw new Error('Reverse foreign table exists: ' + reverseForeignKey);\n            }\n\n            reverseTables.push(table);\n        } else {\n            this._reverseForeignRelation[reverseForeignKey] = [table];\n        }\n    }\n\n    /**\n     * Check if a given foreign relation is present.\n     */\n    hasForeignRelation(foreignKey: string): boolean {\n        return !!this._foreignRelation[foreignKey];\n    }\n\n    /**\n     * Checks if a given reverse foreign relation is present.\n     */\n    hasReverseForeignRelation(reverseForeignKey: string): boolean {\n        return !!this._reverseForeignRelation[reverseForeignKey];\n    }\n\n    /**\n     * Destroys table\n     */\n    destroy(): void {\n        // Remove constraint\n        this._deleteConstraint.offChange(this._onDeletedHandler);\n        this._dataProvider.reset();\n    }\n}\n\n","/**\n * @fileOverview\n * Defines a global dummy records for tables. Each table is configured with a dummy record.\n */\nimport * as dependencies from '@polpware/fe-dependencies';\n\nimport { IModelLike } from '../interfaces/backbone.interface';\n\nconst backbone = dependencies.backbone;\n\nexport class DummyRecords {\n\n    private _data: { [key: string]: IModelLike };\n\n    constructor() {\n        this._data = {};\n    }\n\n    getDummyRecord(key: string) {\n        if (!this._data[key]) {\n            this._data[key] = new backbone.Model({});\n        }\n        return this._data[key];\n    }\n}\n","/**\n * @fileOverview\n * Defines a relational database which supports foreign keys and primary keys.\n * Also this database support cascading deletion and addition.\n */\n\nimport * as dependencies from '@polpware/fe-dependencies';\n\nimport { IRelationalTableOptions, IRelationalTable, RelationalTable } from './table';\nimport { DummyRecords } from './dummy-records';\n\nexport interface IRelationalDatabase {\n    getReference(): IRelationalDatabase;\n    addTable(options: IRelationalTableOptions): IRelationalTable;\n    getTable(name: string): IRelationalTable;\n    addForeignkey(name: string, foreignKey: string, foreignName: string): void;\n    destroy(): void;\n}\n\nexport class RelationDatabase implements IRelationalDatabase {\n\n    private _tableCollection: { [key: string]: IRelationalTable };\n    private _referenceCounter: number;\n    private _dummyRecords: DummyRecords;\n\n    /**\n     * Represents a relational database.\n     */\n    constructor() {\n        this._referenceCounter = 1;\n        this._tableCollection = {};\n        this._dummyRecords = new DummyRecords();\n    }\n\n    /**\n     * Gets a reference of the file system database\n     */\n    getReference(): IRelationalDatabase {\n        this._referenceCounter++;\n        return this;\n    }\n\n    /**\n     * Defines a table in the database.\n     * @function addTable\n     * @param {Object} settings\n     */\n    addTable(options: IRelationalTableOptions): IRelationalTable {\n        return this._tableCollection[options.name] = new RelationalTable(options, this._dummyRecords);\n    }\n\n    /**\n     * Retrieves a table by name.\n     */\n    getTable(name: string): IRelationalTable {\n        return this._tableCollection[name];\n    }\n\n    /**\n     * Defines a foreign relation between two tables.\n     */\n    addForeignkey(name: string, foreignKey: string, foreignName: string): void {\n        // Constraints\n        const table = this._tableCollection[name];\n        if (!table) {\n            throw new Error('Undefined table: ' + name);\n        }\n\n        const foreignTable = this._tableCollection[foreignName];\n        if (!foreignTable) {\n            throw new Error('Undefined foreign table: ' + foreignName);\n        }\n\n        table.addForeignRelation(foreignKey, foreignTable);\n        foreignTable.addReverseForeignRelation(foreignKey, table);\n    }\n\n    /**\n     * Destroys database\n     */\n    destroy(): void {\n        this._referenceCounter--;\n        if (this._referenceCounter === 0) {\n            for (const k in this._tableCollection) {\n                if (this._tableCollection.hasOwnProperty(k)) {\n                    const table = this._tableCollection[k];\n                    table.destroy();\n                }\n            }\n            this._tableCollection = {};\n        }\n    }\n}\n","/**\n * @fileOverview\n * Defines a class for performing XHR in an exception way and in a promise way\n */\n\nimport * as dependencies from '@polpware/fe-dependencies';\n\nconst XHR = dependencies.XHR;\n\nimport { urlEncode } from '@polpware/fe-utilities';\n\nconst _ = dependencies.underscore;\n\nexport interface IXHRCtorOption {\n    url: string;\n    async?: boolean;\n    type?: 'POST' | 'GET';\n    content_type: 'application/x-www-form-urlencoded' | 'application/json' | '';\n    response_type: 'json' | 'blob' | 'document' | 'text' | 'arraybuffer' | '';\n    requestheaders: any[];\n    scope?: any;\n    success_scope?: any;\n    error_scope?: any;\n    data?: any;\n}\n\nconst defaultOptions = {\n    async: true,\n    content_type: '',\n    response_type: 'json',\n    requestheaders: [],\n    success_scope: null,\n    error_scope: null,\n    scope: null\n};\n\nexport function sendPromise(options: IXHRCtorOption): PromiseLike<any> {\n    const settings = _.extend({}, defaultOptions, options);\n\n    const promise: PromiseLike<any> = new Promise((resolve, reject) => {\n        const xhrSettings = {\n            url: settings.url,\n            content_type: settings.content_type,\n            response_type: settings.response_type,\n            type: settings.type,\n            data: settings.data,\n            async: settings.async,\n            success: (output, xhr, input) => {\n                resolve({\n                    response: output,\n                    xhr: xhr,\n                    settings: input\n                });\n            },\n            error: (output, xhr, input) => {\n                reject({\n                    error: output,\n                    xhr: xhr,\n                    settings: input\n                });\n            },\n            success_scope: settings.success_scope,\n            error_scope: settings.error_scope,\n            scope: settings.scope,\n            requestheaders: settings.requestheaders\n        };\n        // Process sent-out data\n        if (settings.content_type === 'application/x-www-form-urlencoded') {\n            xhrSettings.data = urlEncode(xhrSettings.data);\n        } else if (settings.content_type === 'application/json') {\n            xhrSettings.data = JSON.stringify(xhrSettings.data);\n        }\n        XHR.send(xhrSettings);\n    });\n\n    return promise;\n}\n","/**\n * @fileOverview\n * Provides a bunch of utilties on network communication.\n * @name Curl.js\n * @module hypercom/util/Curl\n * @author Xiaolong Tang <xxlongtang@gmail.com>\n * @license Copyright @me\n */\nimport * as dependencies from '@polpware/fe-dependencies';\n\nconst tools = dependencies.Tools;\n\nconst $ = dependencies.jquery;\n\n/**\n * Load a local json file from the given url.\n * This method encapsulates the behavior of loading a local json\n * file, in order that changing its behavior in the future\n * will not impact other modules.\n * We currently leaverage the cache capability of a browser.\n * In the future, we may use memory cache.\n * Also this method returns a promise compatible project, and\n * therefore, please use \"then\" to go future.\n * @function loadJsonUriP\n * @param {String} url\n * @returns {Promise}\n */\nexport function loadJsonUriP(url) {\n    const deferred = $.ajax({\n        url: url, /* 'lang/options.json', */\n        cache: true,\n        dataType: 'json'\n    });\n    return deferred;\n}\n\n/**\n * Tests if a url is reachable.\n * @function pingP\n * @param {String} url The url to be tested.\n * @param {Object} [options]  A set of ajax parameters.\n * @returns {Promise}\n */\nexport function pingP(url, options) {\n    options = options || {};\n    const ajaxParams = tools.extend({ url: url }, options);\n    return $.ajax(ajaxParams);\n}\n\n/**\n * Reads a the response from a given url and\n * parses it into a jquery object.\n * @function loadHtmlP\n * @param {String} url\n * @returns {Promise}\n */\nexport function loadHtmlP(url) {\n    return $.ajax({\n        url: url,\n        dataType: 'html text'\n    }).then(function(data) {\n        /*global DOMParser */\n        const doc = new DOMParser().parseFromString(data, 'text/html');\n        return $(doc);\n    });\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ICacheBackend } from './cache-backend.interface';\r\n\r\n\r\nexport class MemoryBackend<T> implements ICacheBackend<T> {\r\n\r\n    private _store: { [key: string]: T | number };\r\n\r\n    constructor() {\r\n        this._store = {};\r\n    }\r\n\r\n    /**\r\n     * Sets a key-value pair\r\n     */\r\n    set(key: string, value: T | number): T | number {\r\n        this._store[key] = value;\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Gets the value for a given key.\r\n     */\r\n    get(key: string): T | number | null {\r\n        return this._store[key] || null;\r\n    }\r\n\r\n    /**\r\n     * Removes the given key and its corresponding value.\r\n     */\r\n    remove(key: string): void {\r\n        delete this._store[key];\r\n    }\r\n\r\n    /**\r\n     * Returns the number of stored items.\r\n     */\r\n    length(key: string): number {\r\n        return Object.keys(this._store).length;\r\n    }\r\n\r\n    /**\r\n     * Retuns the ith key in the store table.\r\n     */\r\n    key(index: number): string {\r\n        const keys = Object.keys(this._store);\r\n\r\n        if (index >= 0 && index < keys.length) {\r\n            return keys[index];\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Returns if this storage is enabled.\r\n     * This method is required by locachejs.\r\n     */\r\n    enabled(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\n","//\r\n// Author:: Tom Tang <principleware@gmail.com>\r\n// Copyright:: Copyright (c) 2017, Xiaolong Tang\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining\r\n// a copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to\r\n// permit persons to whom the Software is furnished to do so, subject to\r\n// the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be\r\n// included in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n//\r\n// Except as contained in this notice, the name(s) of the above copyright\r\n// holders shall not be used in advertising or otherwise to promote the\r\n// sale, use or other dealings in this Software without prior written\r\n// authorization.\r\n\r\nimport * as dependencies from '@polpware/fe-dependencies';\r\n\r\nconst EventDispatcher = dependencies.EventDispatcher;\r\n\r\nimport { IEventArgs } from '../interfaces/event-args.interface';\r\n\r\nconst getEventDispatcher = function(obj) {\r\n    if (!obj._eventDispatcher) {\r\n        obj._eventDispatcher = new EventDispatcher({\r\n            scope: obj,\r\n            toggleEvent: function(name, state) {\r\n                if (EventDispatcher.isNative(name) && obj.toggleNativeEvent) {\r\n                    obj.toggleNativeEvent(name, state);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    return obj._eventDispatcher;\r\n};\r\n\r\nexport function observableDecorator<T extends { new(...args: any[]) }>(constructor: T) {\r\n    return class extends constructor {\r\n\r\n        public fire<U>(name: string, evt: IEventArgs<U>, bubble?: boolean): IEventArgs<U> {\r\n            const self = this;\r\n\r\n            // Prevent all events except the remove event after the instance has been removed\r\n            if (self.removed && name !== 'remove') {\r\n                return null;\r\n            }\r\n\r\n            const newEvt = getEventDispatcher(self).fire(name, evt, bubble);\r\n\r\n            // Bubble event up to parents\r\n            if (bubble !== false && self.parent) {\r\n                let parent = self.parent();\r\n                while (parent && !newEvt.isPropagationStopped()) {\r\n                    parent.fire(name, newEvt, false);\r\n                    parent = parent.parent();\r\n                }\r\n            }\r\n\r\n            return newEvt;\r\n        }\r\n\r\n\r\n        public on(name: string, callback: (...args: any[]) => any, prepend?: boolean): any {\r\n            return getEventDispatcher(this).on(name, callback, prepend);\r\n        }\r\n\r\n        public off(name: string, callback: (...args: any[]) => any): any {\r\n            return getEventDispatcher(this).off(name, callback);\r\n        }\r\n\r\n        public once(name: string, callback: (...args: any[]) => any): any {\r\n            return getEventDispatcher(this).once(name, callback);\r\n        }\r\n\r\n        public hasEventListeners(name: string): boolean {\r\n            return getEventDispatcher(this).has(name);\r\n        }\r\n    };\r\n}\r\n","//\r\n// Author:: Tom Tang <polpware@gmail.com>\r\n// Copyright:: Copyright (c) 2017, Xiaolong Tang\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining\r\n// a copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to\r\n// permit persons to whom the Software is furnished to do so, subject to\r\n// the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be\r\n// included in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n//\r\n// Except as contained in this notice, the name(s) of the above copyright\r\n// holders shall not be used in advertising or otherwise to promote the\r\n// sale, use or other dealings in this Software without prior written\r\n// authorization.\r\n\r\nimport * as dependencies from '@polpware/fe-dependencies';\r\n\r\nimport { MemoryBackend } from './memory-backend';\r\nimport { observableDecorator } from '../decorators/observable.decorator';\r\n\r\nimport { IEventArgs } from '../interfaces/event-args.interface';\r\nimport { IObservable } from '../interfaces/observable.interface';\r\nimport { IJoinpoint } from '../interfaces/joint-point.interface';\r\nimport { INgZoneLike } from '../interfaces/ng-zone-like.interface';\r\n\r\nimport { ISlidingExpireCache } from './sliding-expire-cache.interface';\r\n\r\nconst locache = dependencies.locache;\r\nconst meld = dependencies.meld;\r\n\r\nconst originalRemove = Object.getPrototypeOf(locache.locache).remove;\r\n\r\nconst currentTime = function() {\r\n    return new Date().getTime();\r\n};\r\n\r\n@observableDecorator\r\nexport class SlidingExpirationCache<T> implements ISlidingExpireCache<T> {\r\n\r\n    private _cache: any;\r\n    private _timeInterval: any;\r\n\r\n    constructor(private _defaultSeconds: number,\r\n        scheduleInterval?: number, ngZone?: INgZoneLike) {\r\n\r\n        const backend = new MemoryBackend<T>();\r\n        this._cache = locache.locache.createCache({ storage: backend });\r\n\r\n        this._cache.remove = meld.around(originalRemove, (input: IJoinpoint) => {\r\n\r\n            const key = input.args[0];\r\n            const onExpireEvtName = this.onExpireEventName(key);\r\n            const event = this.asObservable.fire(onExpireEvtName, {});\r\n\r\n            // if the event is stopped, then stop doing it\r\n            // more time is required ...\r\n            if (event.isDefaultPrevented()) {\r\n                this.resetExpireKey(key, this._defaultSeconds);\r\n                return false;\r\n            }\r\n\r\n            // Otherwise, continue the original logic\r\n            // Remove all listener\r\n            this.asObservable.off(onExpireEvtName, null);\r\n            input.proceed();\r\n\r\n            // fire event\r\n            const afterRemoveEvtName = this.afterRemoveEventName(key);\r\n            this.asObservable.fire(afterRemoveEvtName, {});\r\n\r\n            return true;\r\n        });\r\n\r\n        // interval\r\n        if (scheduleInterval) {\r\n            if (ngZone) {\r\n                ngZone.runOutsideAngular(() => {\r\n                    this._timeInterval = setInterval(() => {\r\n                        this._cache.cleanup();\r\n                    }, scheduleInterval * 1000);\r\n                });\r\n            }\r\n            else {\r\n                this._timeInterval = setInterval(() => {\r\n                    this._cache.cleanup();\r\n                }, scheduleInterval * 1000);\r\n            }\r\n        } else {\r\n            this._timeInterval = null;\r\n        }\r\n    }\r\n\r\n    private onExpireEventName(key: string): string {\r\n        return 'onExpire:' + key;\r\n    }\r\n\r\n    private afterRemoveEventName(key: string): string {\r\n        return 'afterRemove:' + key;\r\n    }\r\n\r\n    private resetExpireKey(key: string, seconds: number) {\r\n        const expirekey = this._cache.expirekey(key);\r\n        const ms = seconds * 1000;\r\n        this._cache.storage.set(expirekey, currentTime() + ms);\r\n    }\r\n\r\n    get asObservable(): IObservable {\r\n        const self: any = this;\r\n        const observable: IObservable = self;\r\n        return observable;\r\n    }\r\n\r\n    // Given a key, a value and an optional number of seconds store the value\r\n    // in the storage backend.\r\n    set(key: string, value: T, seconds: number, afterRemoveCallback?: (evt: IEventArgs<{}>) => IEventArgs<{}>) {\r\n\r\n        const expirekey = this._cache.expirekey(key);\r\n        const valueKey = this._cache.key(key);\r\n\r\n        if (seconds) {\r\n            // The time stored is in milliseconds, but this function expects\r\n            // seconds, so multiply by 1000.\r\n            const ms = seconds * 1000;\r\n            this._cache.storage.set(expirekey, currentTime() + ms);\r\n        } else {\r\n            // Remove the expire key, if no timeout is set\r\n            this._cache.storage.remove(expirekey);\r\n        }\r\n\r\n        if (afterRemoveCallback) {\r\n            this.asObservable.once(this.afterRemoveEventName(key), afterRemoveCallback);\r\n        }\r\n\r\n        return this._cache.storage.set(valueKey, value);\r\n    }\r\n\r\n    // Fetch a value from the cache. Either returns the value, or if it\r\n    // doesn't exist (or has expired) return null.\r\n    get(key: string, seconds?: number): T | null {\r\n        // If the value has expired, before returning null remove the key\r\n        // from the storage backend to free up the space.\r\n        if (this._cache.hasExpired(key)) {\r\n            if (this._cache.remove(key)) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        const valueKey = this._cache.key(key);\r\n        const value = this._cache.storage.get(valueKey);\r\n\r\n        // Slide the expire ke\r\n        if (value) {\r\n            this.resetExpireKey(key, seconds || this._defaultSeconds);\r\n        }\r\n\r\n        // If value isn't truthy, it must be an empty string or similar, so\r\n        // just return that.\r\n        return value;\r\n    }\r\n\r\n    rmOnExpireHandler(key: string, callback: (evt: IEventArgs<{}>) => IEventArgs<{}>): void {\r\n        this.asObservable.off(this.onExpireEventName(key), callback);\r\n    }\r\n\r\n    addOnExpireHandler(key: string, callback: (evt: IEventArgs<{}>) => IEventArgs<{}>): void {\r\n        this.asObservable.on(this.onExpireEventName(key), callback);\r\n    }\r\n\r\n    public get count(): number {\r\n        return this._cache.length();\r\n    }\r\n\r\n    reset() {\r\n        const keys = this._cache.keys();\r\n        keys.forEach((k) => {\r\n            this.asObservable.off(this.onExpireEventName(k), null);\r\n            originalRemove.call(this._cache, k);\r\n            this.asObservable.fire(this.afterRemoveEventName(k), {});\r\n        });\r\n    }\r\n\r\n    // must destory, or leaking ...\r\n    destroy() {\r\n        this.reset();\r\n\r\n        if (this._timeInterval) {\r\n            clearInterval(this._timeInterval);\r\n        }\r\n    }\r\n}\r\n","export interface IPolicyCtorOptions {\r\n    url: string;\r\n}\r\n\r\nexport interface IOAuthTokenPolicyCtorOptions extends IPolicyCtorOptions {\r\n    clientId: string;\r\n    clientSecret: string;\r\n    scope: string;\r\n}\r\n\r\nexport interface IAntiForgeryKeyCtorOptions extends IPolicyCtorOptions {\r\n    antiForgeryKey: string;\r\n    elementTag: string;\r\n}\r\n\r\nexport interface IOAuthParams {\r\n    client_id: string;\r\n    client_secret: string;\r\n    scope: string;\r\n    grant_type: any;\r\n}\r\n\r\nexport interface IOAuthToken {\r\n    expiresIn: number;\r\n    createdOn: number;\r\n    token: string;\r\n    refreshToken: string;\r\n}\r\n\r\nexport interface IOpenIDToken extends IOAuthToken {\r\n    openId: string;\r\n}\r\n\r\nexport interface IPolicy {\r\n    getTokenInternal(): PromiseLike<string>;\r\n\r\n    applyTo(options: any): void;\r\n\r\n    isExpired(): boolean;\r\n\r\n    readFrom(settings: {});\r\n\r\n    persistent(): any;\r\n\r\n    applyToV2(options: any): void;\r\n\r\n    applyToV3(options: any): void;\r\n\r\n    /**\r\n     * The interface for retrieving the token from a remote server.\r\n     * This method internally dispatches the call to another method\r\n     * and cache the token.\r\n     */\r\n    getTokenP(): PromiseLike<string>;\r\n\r\n    reset();\r\n}\r\n\r\nexport const DummyOAuthTokenCtorParams: IOAuthTokenPolicyCtorOptions = {\r\n    url: 'dummy',\r\n    clientId: 'dummy',\r\n    clientSecret: 'dummy',\r\n    scope: 'all'\r\n};\r\n","/**\n * @fileOverview\n * A base class for defining security plicies.\n */\n\nimport * as dependencies from '@polpware/fe-dependencies';\n\nimport { lift } from '@polpware/fe-utilities';\n\nimport { IPolicyCtorOptions, IPolicy } from './interfaces';\n\nconst _ = dependencies.underscore;\n\nexport abstract class PolicyBase implements IPolicy {\n\n    protected url: string;\n    protected token: string;\n\n    constructor(settings: IPolicyCtorOptions) {\n        this.url = settings.url;\n        this.token = '';\n    }\n\n    abstract getTokenInternal(): PromiseLike<string>;\n\n    abstract applyTo(options: any): void;\n\n    abstract isExpired(): boolean;\n\n    abstract readFrom(settings: {});\n\n    abstract persistent(): any;\n\n    abstract applyToV2(options: any): void;\n\n    abstract applyToV3(options: any): void;\n\n\n    /**\n     * The interface for retrieving the token from a remote server.\n     * This method internally dispatches the call to another method\n     * and cache the token.\n     */\n    getTokenP(): PromiseLike<string> {\n        if (!_.isEmpty(this.token) && !this.isExpired()) {\n            return lift(this.token, null);\n        }\n\n        return this.getTokenInternal()\n            .then((token) => {\n                return this.token = token;\n            });\n    }\n\n    /**\n     * Reset the security policy, e.g.,\n     * removing established token.\n     */\n    reset() {\n        this.token = '';\n    }\n}\n","/**\n * @fileOverview\n * Defines a base class for retrieving OAuth2 tokens.\n */\n\nimport * as dependencies from '@polpware/fe-dependencies';\n\nimport { safeParseInt } from '@polpware/fe-utilities';\nimport {\n    IOAuthTokenPolicyCtorOptions,\n    IOAuthToken,\n    IOAuthParams\n} from './interfaces';\nimport { PolicyBase } from './policy-base';\n\nconst _ = dependencies.underscore;\nconst $ = dependencies.jquery;\n\nexport function adaptToOAuthToken(data): IOAuthToken {\n    data = data || {};\n    data.expiresIn = data.expiresIn || 0;\n    data.createdOn = data.createdOn || 0;\n    data.token = data.token || '';\n    data.refreshToken = data.refreshToken || '';\n\n    return data;\n}\n\nexport class OAuthTokenPolicy extends PolicyBase {\n\n    protected clientId: string;\n    protected clientSecret: string;\n    protected scope: string;\n    protected expiresIn: number;\n    protected createdOn: number;\n    protected refreshToken: string;\n    public grantType: 'authorization_code' | 'refresh_token' | 'password' | 'client_credentials';\n\n    constructor(settings: IOAuthTokenPolicyCtorOptions) {\n        super(settings);\n\n        this.clientId = settings.clientId;\n        this.clientSecret = settings.clientSecret;\n        this.scope = settings.scope;\n        this.expiresIn = null;\n        this.createdOn = null;\n        this.refreshToken = '';\n    }\n\n    /**\n     * Feeds the policy with some settings from outside,\n     * usually from local storage\n     */\n    readFrom(settings: IOAuthToken) {\n        this.expiresIn = settings.expiresIn;\n        this.createdOn = settings.createdOn;\n        this.token = settings.token;\n        this.refreshToken = settings.refreshToken;\n    }\n\n    /**\n     * Returns the data that are persistentable.\n     */\n    persistent(): IOAuthToken {\n        return {\n            expiresIn: this.expiresIn,\n            createdOn: this.createdOn,\n            token: this.token,\n            refreshToken: this.refreshToken\n        };\n    }\n\n    getParams(): any {\n        return {\n            client_id: this.clientId,\n            client_secret: this.clientSecret,\n            scope: this.scope,\n            grant_type: this.grantType\n        };\n    }\n\n    // TODO: Support progress loading\n    getTokenInternal(): PromiseLike<string> {\n        const params = this.getParams();\n        return $.ajax({\n            url: this.url,\n            data: params,\n            method: 'POST'\n        }).then((resp) => {\n            this.createdOn = new Date().getTime();\n            this.expiresIn = resp.expires_in;\n            this.refreshToken = resp.refreshToken || '';\n            return (resp.access_token);\n        });\n    }\n\n    /**\n     * Returns if the token is expired or not.\n     */\n    isExpired(): boolean {\n        if (!this.token || this.token.length < 1) {\n            return true;\n        }\n        if (!this.createdOn) {\n            return true;\n        }\n        const expiresIn = safeParseInt(this.expiresIn);\n        if (expiresIn <= 0) {\n            return true;\n        }\n        const now = new Date();\n        const diff = now.getTime() - this.createdOn;\n        if (diff < expiresIn * 1000) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Applys the token to the given options.\n     */\n    applyTo(options: any): void {\n        options.beforeSend = (xhr) => {\n            xhr.setRequestHeader('Authorization', ('Bearer '.concat(this.token)));\n        };\n    }\n\n    /**\n     * Apply security policy to the given options.\n     */\n    applyToV2(options: any): void {\n        options.headers = options.headers || {};\n        options.headers = {\n            Authorization: 'Bearer '.concat(this.token)\n        };\n    }\n\n    /**\n     * App security policy the given options, used for our customized XHR.\n     */\n    applyToV3(options: any): void {\n        options.requestheaders = options.requestheaders || [];\n        options.requestheaders.push({\n            key: 'Authorization',\n            value: 'Bearer '.concat(this.token)\n        });\n    }\n\n    /**\n     * Resets the token and its assoicated information.\n     */\n    reset() {\n        super.reset();\n        this.refreshToken = '';\n        this.expiresIn = null;\n        this.createdOn = null;\n    }\n}\n","/**\r\n * @fileOverview\r\n * OpenID token policy, built upon OAuth2 token policy\r\n */\r\n\r\nimport {\r\n    IOpenIDToken,\r\n    DummyOAuthTokenCtorParams\r\n} from './interfaces';\r\n\r\nimport { OAuthTokenPolicy, adaptToOAuthToken } from './oauth-token-policy';\r\n\r\nexport function adaptToOpenIDToken(data): IOpenIDToken {\r\n    data = data || {};\r\n\r\n    const r = adaptToOAuthToken(data);\r\n    return { ...r, openId: data.openId || '' };\r\n}\r\n\r\nexport class OpenIDPolicy extends OAuthTokenPolicy {\r\n\r\n    private _openId: string;\r\n\r\n    constructor() {\r\n        super(DummyOAuthTokenCtorParams);\r\n        this._openId = '';\r\n    }\r\n\r\n    /**\r\n     * Returns the necessary information for peristence.\r\n     */\r\n    persistent(): IOpenIDToken {\r\n        const r = super.persistent();\r\n        return { ...r, openId: this._openId };\r\n    }\r\n\r\n    /**\r\n     * Reads credential from the given settings.\r\n     */\r\n    readFrom(settings: IOpenIDToken) {\r\n        super.readFrom(settings);\r\n        this._openId = settings.openId;\r\n        return this;\r\n    }\r\n}\r\n","import { lift } from '@polpware/fe-utilities';\r\n\r\nimport { IPolicy } from './interfaces';\r\n\r\nexport class NullPolicy implements IPolicy {\r\n\r\n    getTokenInternal(): PromiseLike<string> {\r\n        throw new Error('NotImplemented');\r\n    }\r\n\r\n    applyTo(options: any): void { }\r\n\r\n    isExpired(): boolean {\r\n        return false;\r\n    }\r\n\r\n    readFrom(settings: {}) { }\r\n\r\n\r\n    persistent(): any { }\r\n\r\n    applyToV2(options: any): void { }\r\n\r\n    applyToV3(options: any): void { }\r\n\r\n    getTokenP(): PromiseLike<string> {\r\n        throw new Error('NotImplemented');\r\n    }\r\n\r\n    reset() { }\r\n}\r\n","/**\n * @fileOverview\n * Defines the user credential. This user credential supports event\n * listening. Note that the credential is assumed to be Uppercase:\n * Username and Password\n */\nimport * as dependencies from '@polpware/fe-dependencies';\n\nimport {\n    isArray\n} from '@polpware/fe-utilities';\n\nimport { observableDecorator } from '../decorators/observable.decorator';\nimport { IObservable } from '../interfaces/observable.interface';\nimport { IEventArgs } from '../interfaces/event-args.interface';\n\nimport { IPolicy } from './interfaces';\n\nconst _ = dependencies.underscore;\n\nfunction isEquiva(a: any, b: any): boolean {\n\n    // Strict equals\n    if (a === b) {\n        return true;\n    }\n\n    // Compare null\n    if (a === null || b === null) {\n        return a === b;\n    }\n\n    // Compare number, boolean, string, undefined\n    if (typeof a !== 'object' || typeof b !== 'object') {\n        return a === b;\n    }\n\n    // Compare arrays\n    if (isArray(b) && isArray(a)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        let k = a.length;\n        while (k--) {\n            if (!isEquiva(a[k], b[k])) {\n                return false;\n            }\n        }\n    }\n\n    const checked = {};\n    const objectB = b as Object;\n    for (const k in objectB) {\n        if (objectB.hasOwnProperty(k)) {\n            if (!isEquiva(a[k], b[k])) {\n                return false;\n            }\n\n            checked[k] = true;\n        }\n    }\n\n    const objectA = a as Object;\n    for (const k in objectA) {\n        if (objectA.hasOwnProperty(k)) {\n            if (!checked[k] && !isEquiva(a[k], b[k])) {\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\nexport interface IUserProfile {\n    username?: string;\n    email?: string;\n    role?: string;\n    displayName?: string;\n}\n\n// immutable\n\n@observableDecorator\nexport class UserCredential<T extends IPolicy> {\n\n    private _security: T;\n    private _user: IUserProfile;\n    /**\n     * @constructor Credential\n     */\n    constructor(public authPolicy: T) {\n        this._user = {};\n        this._security = authPolicy;\n    }\n\n    public get asObservable(): IObservable {\n        const self: any = this;\n        return self as IObservable;\n    }\n\n    public security(value?: T): T {\n        if (value) {\n            this._security = value;\n        }\n        return this._security;\n    }\n\n    // Does not trigger any event\n    readFrom<U extends IUserProfile>(data: U): void {\n        this._user = _.extend(this._user, data);\n    }\n\n    setUser<U extends IUserProfile>(data: U): void {\n        if (isEquiva(this._user, data)) {\n            return;\n        }\n\n        this._user = data;\n        this.asObservable.fire('change:user', {\n            data: this._user\n        });\n    }\n\n    extendUser<U extends IUserProfile>(data: U): void {\n        const newData = _.extend({}, this._user, data);\n        this.setUser(newData);\n    }\n\n    getUser<U extends IUserProfile>(): U {\n        return _.extend({}, this._user);\n    }\n\n    subscribe<U extends IUserProfile>(handler: (evt: IEventArgs<U>) => IEventArgs<U>, likeBehaviorSubject: boolean = false) {\n        this.asObservable.on('change:user', handler);\n\n        if (likeBehaviorSubject) {\n            const newEvt: any = { data: this._user };\n            handler(newEvt as IEventArgs<U>);\n        }\n    }\n\n    unSubscribe(handler: (evt: any) => any) {\n        this.asObservable.off('change:user', handler);\n    }\n\n    isUserKnown(): boolean {\n        return !!(this._user && this._user.username);\n    }\n\n    isAuthenticated(): boolean {\n        return this.authPolicy && !this.authPolicy.isExpired();\n    }\n}\n\n","/**\n * @fileOverview\n * Provides the anti-forgery security policy.\n * @name AntiForgeryKeyPolicy.js\n * @author Xiaolong Tang <xxlongtang@gmail.com>\n * @license Copyright @me\n */\nimport * as dependencies from '@polpware/fe-dependencies';\n\nimport { liftWithGuard } from '@polpware/fe-utilities';\n\nimport { IAntiForgeryKeyCtorOptions } from './interfaces';\n\nimport { PolicyBase } from './policy-base';\n\nconst $ = dependencies.jquery;\nconst defaultAntiForgeryKey = '__RequestVerificationToken';\nconst defaultElementTag = '';\n\n/*\n <input name=\"__RequestVerificationToken\" type=\"hidden\"\n value=\"J8kl6w7KaBAteKOPeHW1IlG9RS7abCkbvQf2GwBlMVZZOX9FF-Bhc5mYmqXw4qe0MLraucQtKC-TAVh1rJEZ0SDfeLfqp-L5JrthIM9V0gp76-jnVz9J-rdYFhVeTT4Y0\">\n */\nfunction getTokenInternal(url: string, elementTag: string, inputField: string): PromiseLike<string> {\n    return $.ajax({\n        url: url, // A page containing required tokens\n        dataType: 'html text'\n    }).then(function(data) {\n        /*global DOMParser */\n        let doc, token, elm;\n        token = '';\n        doc = new DOMParser().parseFromString(data, 'text/html');\n        if (elementTag) {\n            elm = $(doc).find(elementTag);\n            if (elm.length > 0) {\n                elm = $(doc).find(inputField);\n                if (elm.length > 0) {\n                    elm = elm.eq(0);\n                    token = elm.attr('value');\n                }\n            }\n        } else {\n            elm = $(doc).find(inputField);\n            if (elm.length > 0) {\n                elm = elm.eq(0);\n                token = elm.attr('value');\n            }\n        }\n        return token;\n    });\n}\n\nexport class AntiForgeryKeyPolicy extends PolicyBase {\n\n    private _antiForgeryKey: string;\n    private _elementTag: string;\n    private _expired: boolean;\n\n    /**\n     * @constructor AntiForgeryKeyPolicy\n     * @param {Object} [settings] A set of settings.\n     */\n    constructor(settings: IAntiForgeryKeyCtorOptions) {\n        super(settings);\n        this._antiForgeryKey =\n            settings.antiForgeryKey || defaultAntiForgeryKey;\n        this._elementTag = settings.elementTag || defaultElementTag;\n        this._expired = true;\n    }\n\n    isExpired(): boolean {\n        return this._expired;\n    }\n\n    inputField(): string {\n        return 'input[name=\"' + this._antiForgeryKey + '\"]';\n    }\n\n    /**\n     * Feeds the policy with some settings from outside,\n     * usually from local storage\n     * @function readFrom\n     * @param {Object} settings\n     * @returns {Object}\n     */\n    readFrom(settings) {\n        this.token = settings.token;\n    }\n\n    /**\n     * Returns the object that are persistentable.\n     * @function persistent\n     * @returns {Object}\n     */\n    persistent() {\n        return {\n            token: this.token\n        };\n    }\n\n    /**\n     * Gets the anti-forgery token from the given url\n     * or the instance url.\n     * @function getTokenP\n     * @param {String}[url] The URL where the response from it may contain\n     * the anti-forgery token; it is optional and used when you want to\n     * overwrite the instance url.\n     * @returns {Promise}\n     * @throws {}\n     */\n    getTokenInternal(): PromiseLike<string> {\n        const ret = getTokenInternal(this.url, this._elementTag, this.inputField());\n        const p = liftWithGuard(ret, function(token) {\n            const isGoodToken = token && token.length > 0;\n            this._expired = !isGoodToken;\n            return isGoodToken;\n        });\n        return ret;\n    }\n\n    /**\n     * Applys the anti-forgery key and its value to the given options.\n     * @function apply\n     * @param {Object} options The options to be used for making a request.\n     */\n    applyTo(options) {\n        const data = options.data;\n        data[this._antiForgeryKey] = this.token;\n    }\n\n    /**\n     * Apply security policy to the given options.\n     * @function applyToV2\n     * @param {Object} options A params field is expected.\n     */\n    applyToV2(options) {\n        options.params = options.params || {};\n        options.params[this._antiForgeryKey] = this.token;\n    }\n\n    // TODO:\n    applyToV3(options) {\n    }\n\n    /**\n     * Resets the token and expired flag\n     * @function reset\n     */\n    reset() {\n        super.reset();\n        this._expired = true;\n    }\n}\n","import {\r\n    IOAuthTokenPolicyCtorOptions\r\n} from './interfaces';\r\n\r\nimport { OAuthTokenPolicy } from './oauth-token-policy';\r\nexport { adaptToOAuthToken } from './oauth-token-policy';\r\n\r\nexport class OAuthTokenExtPolicy extends OAuthTokenPolicy {\r\n\r\n    private _payload: object;\r\n\r\n    constructor(settings: IOAuthTokenPolicyCtorOptions, payload: object) {\r\n        super(settings);\r\n\r\n        this._payload = { ...payload };\r\n    }\r\n\r\n    public get payload(): object {\r\n        return this._payload;\r\n    }\r\n\r\n    // override\r\n    getParams(): any {\r\n        const p = super.getParams();\r\n        return { ...p, ... this._payload };\r\n    }\r\n}\r\n","import {\r\n    CollectionActionWithPayload,\r\n    ICollectionState,\r\n    ICollectionItem\r\n} from '../collection-action-def';\r\n\r\nexport function reducer<T extends ICollectionItem>(\r\n    state: ICollectionState<T>,\r\n    action: CollectionActionWithPayload<T>\r\n): ICollectionState<T> {\r\n    switch (action.type) {\r\n\r\n        case 'ADD': {\r\n\r\n            const payload = action.payload.filter(x => {\r\n                // Look for it in the current list\r\n                const index = state.items.findIndex((y) => {\r\n                    return x.id === y.id;\r\n                });\r\n                return index === -1;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                items: [\r\n                    ...state.items,\r\n                    ...payload\r\n                ]\r\n            };\r\n        }\r\n\r\n        case 'REMOVE': {\r\n\r\n            const newItems = state.items.filter(x => {\r\n                const index = action.payload.findIndex((y) => {\r\n                    return x.id === y.id;\r\n                });\r\n                return index === -1;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                items: newItems\r\n            };\r\n        }\r\n\r\n        case 'MODIFY': {\r\n\r\n            // Nothing to do\r\n            return state;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n","import { ActionReducerMap } from '@ngrx/store';\r\nimport { combineReducers } from '@ngrx/store';\r\n\r\nimport { ICollectionState, ICollectionItem } from '../collection-action-def';\r\nimport * as fromCollection from './collection.reducer';\r\n\r\n\r\nexport interface GenericState<T extends ICollectionItem> {\r\n    collection: ICollectionState<T>;\r\n}\r\n\r\nexport function buildInitialState<T extends ICollectionItem>(): GenericState<T> {\r\n    return {\r\n        collection: {\r\n            items: []\r\n        }\r\n    };\r\n}\r\n\r\nexport function buildReducerMap<T extends ICollectionItem>(): ActionReducerMap<GenericState<T>> {\r\n    return {\r\n        collection: fromCollection.reducer\r\n    };\r\n}\r\n\r\n\r\n","import * as ngrxStore from '@ngrx/store';\r\n\r\nimport { ICollectionItem } from './collection-action-def';\r\n\r\nimport * as reducerIndex from './reducers/index';\r\n\r\n// Store\r\n/*\r\n    ReducerManager,\r\n    StateObservable,\r\n    ActionsSubject\r\n*/\r\n\r\n// StateObservable\r\n/*\r\n   ActionsSubject\r\n   ReducerManager\r\n   ScannnedActionsSubject => leaf\r\n   InitialState\r\n*/\r\n\r\n// ActionsSubject (leaf)\r\n\r\n// ReducerManager\r\n/*\r\n   ReducerManagerDispatcher\r\n   INITIAL_STATE  => pass in parameters\r\n   INITIAL_REDUCERS => ActionReducerMap (pass in parameters)\r\n   REDUCER_FACTORY => combineReducers\r\n   ActionReducerFactory<any, any>\r\n*/\r\n\r\n// ReducerManagerDispatcher\r\n\r\n/*\r\n   ActionSsubject  (leaf)\r\n*/\r\n\r\n// ActionReducerFactory<any, any> (Use combinReducer function from utils)\r\n\r\n/*\r\n   ActionReducerMap\r\n   initialState\r\n\r\n   ActionReducer\r\n*/\r\n\r\n// createReducerfactory\r\n/*\r\n   ActionReducerFactory\r\n   MataReducerFactory\r\n\r\n*/\r\n\r\nexport function factory<T extends ICollectionItem>(): ngrxStore.Store<reducerIndex.GenericState<T>> {\r\n\r\n    const actionSubject = new ngrxStore.ActionsSubject();\r\n    const scannerActionSubject = new ngrxStore.ScannedActionsSubject();\r\n    const reducerManagerDispatch: ngrxStore.ReducerManagerDispatcher = actionSubject;\r\n\r\n    const actionReducerFactory: ngrxStore.ActionReducerFactory<any, any> = ngrxStore.combineReducers;\r\n\r\n    const reducerManager = new ngrxStore.ReducerManager(actionSubject,\r\n        reducerIndex.buildInitialState<T>(),\r\n        reducerIndex.buildReducerMap<T>(),\r\n        actionReducerFactory);\r\n\r\n    const stateObservable = new ngrxStore.State(actionSubject,\r\n        reducerManager,\r\n        scannerActionSubject,\r\n        reducerIndex.buildInitialState<T>());\r\n\r\n    const store = new ngrxStore.Store<reducerIndex.GenericState<T>>(stateObservable, actionSubject, reducerManager);\r\n    return store;\r\n}\r\n","import { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ICollectionState, ICollectionItem } from './collection-action-def';\r\n\r\nimport { ICollectionStore } from './collection-store.interface';\r\nimport { GenericState } from './reducers';\r\n\r\nexport abstract class CollectionAbstractStore<T extends ICollectionItem> implements ICollectionStore<T> {\r\n\r\n    public abstract getState(): Observable<ICollectionState<T>>;\r\n    public abstract getStore(): Store<GenericState<T>>;\r\n\r\n    public add(payload: Array<T>): void {\r\n        this.getStore().dispatch({\r\n            type: 'ADD',\r\n            payload: payload\r\n        });\r\n    }\r\n\r\n    public remove(payload: Array<T>): void {\r\n        this.getStore().dispatch({\r\n            type: 'REMOVE',\r\n            payload: payload\r\n        });\r\n    }\r\n\r\n    public modify(payload: Array<T>): void {\r\n        this.getStore().dispatch({\r\n            type: 'MODIFY',\r\n            payload: payload\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store, } from '@ngrx/store';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { factory } from './factory';\r\n\r\nimport { GenericState } from './reducers/index';\r\nimport {\r\n    CollectionAbstractStore\r\n} from './collection-abstract.store';\r\n\r\nimport {\r\n    ICollectionState,\r\n    ICollectionItem\r\n} from './collection-action-def';\r\n\r\n\r\n@Injectable()\r\nexport class CollectionStore<T extends ICollectionItem>\r\n    extends CollectionAbstractStore<T> {\r\n\r\n    private _store: Store<GenericState<T>>;\r\n\r\n    constructor() {\r\n        super();\r\n        this._store = factory<T>();\r\n    }\r\n\r\n    public getStore(): Store<GenericState<T>> {\r\n        return this._store;\r\n    }\r\n\r\n    public getState(): Observable<ICollectionState<T>> {\r\n        return this._store.select('collection');\r\n    }\r\n}\r\n","/**\n * @fileOverview\n * An endpoint which aggregates a few other endpoints, to form a new endpoint.\n * Note that the caller is responsible for resetting underlying data providers\n * and even caching them.\n * Moreover, this class does not assume any knowledge about providerGenerator.\n * providerGenerator may generate the same thing again as again.\n * Also note that it is the provider generator's responsibilty for\n * preversing the state of each data provider.\n */\n\nimport * as dependencies from '@polpware/fe-dependencies';\n\nimport { IBackboneCollectionLike } from '../interfaces/backbone.interface';\n\nconst when = dependencies.when;\nconst _ = dependencies.underscore;\n\nfunction hasNextPage(collection: IBackboneCollectionLike): boolean {\n    if (!collection.state.totalPages && !collection.state.totalRecords) {\n        return true;\n    }\n    return collection.hasNextPage();\n}\n\nfunction getNextPage(collection: IBackboneCollectionLike): PromiseLike<any> {\n    if (!collection.state.totalPages && !collection.state.totalRecords) {\n        return collection.getFirstPage();\n    }\n    return collection.getNextPage();\n}\n\nexport interface IProviderGenerator {\n    hasMore(): boolean;\n    getNext(): PromiseLike<Array<IBackboneCollectionLike>>;\n    reset(): void;\n}\n\nexport class AggregateCollection {\n\n    private _workingProviders: Array<IBackboneCollectionLike>;\n\n    constructor(private _providerGenerator: IProviderGenerator) {\n        this._workingProviders = [];\n    }\n\n    hasNextPage(): boolean {\n        // Case 1: The first time we request, we always have something.\n        if (this._workingProviders.length === 0) {\n            return true;\n        }\n        if (this._providerGenerator.hasMore()) {\n            return true;\n        }\n        return _.some(this._workingProviders, function(elem) {\n            return elem.hasNextPage();\n        });\n    }\n\n    getFirstPage(): PromiseLike<any> {\n        // Generate providers\n        return this._providerGenerator.getNext()\n            .then((providers) => {\n                providers = _.filter(providers, function(p) {\n                    return hasNextPage(p);\n                });\n                return providers;\n            })\n            .then((providers) => {\n                this._workingProviders.length = 0;\n                const promises = _.map(providers, function(p) {\n                    return getNextPage(p)\n                        .then((resp) => {\n                            this._workingProviders.push(p);\n                            return resp;\n                        });\n                });\n                return when.settle(promises);\n            });\n    }\n\n    getNextPage(): PromiseLike<any> {\n        return this.getFirstPage();\n    }\n\n    reset(): void {\n        this._providerGenerator.reset();\n        this._workingProviders = [];\n    }\n\n    forEach(func: (elem: any) => any) {\n        this._workingProviders.forEach((p) => {\n            p.forEach(func);\n        });\n    }\n\n    get(id) {\n        // TODO:\n    }\n}\n\n","/**\n * @fileOverview\n * A decorator to Backbone. It tracks all sync events of the Backbone\n * in a nonintrusive manner.\n */\n\nimport * as dependencies from '@polpware/fe-dependencies';\n\nconst backbone = dependencies.backbone;\nconst meld = dependencies.meld;\n\n/**\n * The callback for the sync event.\n * @callback EventHubcallback\n * @param {Object} method The method assoicated with the sync event.\n * @param {Object} model The model assoicated with the sync event.\n * @param {Object} response The response assoicated with the sync event.\n * @param {Object} options The options associated with the sync event.\n */\n\n/**\n * Sets up a callback for listening to the sync events from Backbone.\n * @function mountSyncListener\n * @param {EventHubcallback} callback\n * @throws {Error}\n */\nexport function mountSyncListener(callback) {\n    // Collection\n    const remover1 = meld.before(backbone.Collection.prototype, 'trigger', callback);\n    const remover2 = meld.before(backbone.Model.prototype, 'trigger', callback);\n    return [remover1, remover2];\n}\n\n/**\n * The callback for the sync event.\n * @callback EventHubsyncSignature\n * @param {String} method The method assoicated with the sync event.\n * @param {Object} model The model assoicated with the sync event.\n * @param {Object} options The options associated with the sync event.\n */\n\n/**\n * Sets up a pre-sync callback.\n * @function mountSyncBeforeAdvice\n * @param {EventHubsyncSignature} callback\n */\nexport function mountSyncBeforeAdvice(callback) {\n    return meld.before(backbone, 'sync', callback);\n}\n\n/**\n * The signature for the around advice.\n * @callback EventHubaroundAdviceSignature\n * @param {String} jointpoint the jointpoint for this advice.\n */\n\n/**\n * Sets up an around advice.\n * @function mountSyncAroundAdvice\n * @param {EventHubaroundAdviceSignature} callback\n */\nexport function mountSyncAroundAdvice(callback) {\n    return meld.around(backbone, 'sync', callback);\n}\n\n\n/**\n * Sets up a pre-ajax callback.\n * @function mountAjaxBeforeAdvice\n * @param {Function} callback\n */\nexport function mountAjaxBeforeAdvice(callback) {\n    return meld.before(backbone, 'ajax', callback);\n}\n\n","/**\n * @fileOverview\n * Provides a layer of backend service abstraction.\n * Defines the backend services. This class is built onto the backbone js, but with\n * enhanced abilities of managing the dependency among all services of the backend,\n * and caching some type of objects for a period of time.\n */\n/*jslint unparam: true */\n\nimport * as dependencies from '@polpware/fe-dependencies';\n\nimport { urlEncode } from '@polpware/fe-utilities';\n\nimport { SlidingExpirationCache } from '../cache/sliding-expiration-cache';\n\nimport { IJoinpoint } from '../interfaces/joint-point.interface';\n\nimport {\n    mountSyncBeforeAdvice,\n    mountAjaxBeforeAdvice,\n    mountSyncAroundAdvice\n} from './event-hub';\n\nimport { IBackboneOptions, IBackboneConfiguration } from './interfaces';\n\nconst DataFlow = dependencies['dataflow'];\nconst backbone = dependencies['backbone'];\nconst _ = dependencies.underscore;\n\n/**\n * The endpoint types for a backend service.\n */\nexport const endPointEnum = {\n    model: 1,\n    collection: 2,\n    pagedCollection: 3\n};\n\n/**\n * The sync types defined in the backbone js.\n */\nexport const syncMethodEnum = {\n    /**\n     * Fetch a model or a collection.\n     */\n    read: 'read',\n    /**\n     * Save a model.\n     */\n    create: 'create',\n    patch: 'patch',\n    update: 'update',\n    /**\n     * Destroy a model\n     */\n    delete: 'delete'\n};\n\nconst globalConfigurationMapping: { [key: string]: IBackboneConfiguration } = {};\nconst mountedFeatureRemovers: any[] = [];\n\n// Idempotent\n// Instance once ...\nfunction mountFeatures() {\n\n    if (mountedFeatureRemovers.length > 0) {\n        return;\n    }\n    /*jslint unparam: true */\n    /*\n      eventHub.mountSyncListener(function (method, model, response, options) {\n      // Ignore other method\n      if (method !== 'sync') {\n      return;\n      }\n      if (options.endPointKey && options.methodKey) {\n      var dataflow = self._dataflow,\n      key = options.endPointKey + ':' + options.methodKey;\n      dataflow[key] = dataflow[key] + 1;\n      }\n      }); */\n\n    let remover = mountSyncBeforeAdvice(function(method, model, options) {\n        options.methodKey = method;\n        options.endPointKey = model.endPointKey || (model.collection ? model.collection.endPointKey : null);\n        if (options.endPointKey) {\n            const cfg = globalConfigurationMapping[options.endPointKey];\n            const cfgOptions = cfg.options;\n            if (method === 'delete') {\n                if (cfgOptions.deleteUrl) {\n                    options.url = cfgOptions.deleteUrl;\n                }\n                if (cfgOptions.deleteContentType) {\n                    options.contentType = cfgOptions.deleteContentType;\n                }\n            } else if (method === 'update') {\n                if (cfgOptions.updateUrl) {\n                    options.url = cfgOptions.updateUrl;\n                }\n                if (cfgOptions.updateContentType) {\n                    options.contentType = cfgOptions.updateContentType;\n                }\n            } else if (method === 'create') {\n                if (cfgOptions.createUrl) {\n                    options.url = cfgOptions.createUrl;\n                }\n                if (cfgOptions.createContentType) {\n                    options.contentType = cfgOptions.createContentType;\n                }\n            } else if (method === 'patch') {\n                if (cfgOptions.patchUrl) {\n                    options.url = cfgOptions.patchUrl;\n                }\n                if (cfgOptions.patchContentType) {\n                    options.contentType = cfgOptions.patchContentType;\n                }\n            }\n        }\n    });\n\n    mountedFeatureRemovers.push(remover);\n    remover = mountAjaxBeforeAdvice(function(options) {\n        if (options.endPointKey) {\n            const cfg = globalConfigurationMapping[options.endPointKey];\n            const cfgOptions = cfg.options;\n            const policyDelegate = cfgOptions.securityDelegate;\n            const extraParams = cfgOptions.extraParams;\n            if (cfgOptions.contentType === 'application/x-www-form-urlencoded' &&\n                options.contentType === 'application/json') {\n                options.data = JSON.parse(options.data);\n                if (extraParams) {\n                    _.extend(options.data, extraParams);\n                }\n                if (policyDelegate) {\n                    policyDelegate(options);\n                }\n                options.data = urlEncode(options.data);\n                options.contentType = cfgOptions.contentType;\n            } else {\n                if (extraParams) {\n                    _.extend(options.data, extraParams);\n                }\n                if (policyDelegate) {\n                    policyDelegate(options);\n                }\n                if (options.contentType === 'application/x-www-form-urlencoded') {\n                    options.data = urlEncode(options.data);\n                }\n            }\n        }\n    });\n    mountedFeatureRemovers.push(remover);\n\n    remover = mountSyncAroundAdvice(function(jointpoint: IJoinpoint) {\n        const options = jointpoint.args[2];\n        if (options.endPointKey) {\n            const cfg = globalConfigurationMapping[options.endPointKey];\n            const cfgOptions = cfg.options;\n            if (cfgOptions.syncDelegate) {\n                const syncDelegate = cfgOptions.syncDelegate;\n                // Return a promise\n                return syncDelegate(options.endPointKey, options, cfg, function() {\n                    return jointpoint.proceed();\n                });\n            }\n        }\n        return jointpoint.proceed();\n    });\n    mountedFeatureRemovers.push(remover);\n}\n\nconst defaultLivePeroid = 60 * 5;\n\nexport interface IGlobalProviderCtorOptions {\n    webhost?: string;\n}\n\nexport class GlobalProvider {\n\n    private _host: string;\n    private _dataflow: any;\n    private _cache: SlidingExpirationCache<any>;\n    private _myEndPointKeys: any[];\n    private _uniqueNamePrefix: string;\n\n    constructor(ctorOptions: IGlobalProviderCtorOptions) {\n        this._cache = new SlidingExpirationCache(defaultLivePeroid);\n        this._dataflow = new DataFlow();\n        this._myEndPointKeys = [];\n        this._host = ctorOptions.webhost || '';\n        this._uniqueNamePrefix = this._host ? (this._host.replace('.', '-') + '-') : '';\n\n        // Mount features\n        mountFeatures();\n    }\n\n    public get host(): string {\n        return this._host;\n    }\n\n    public get configurationMapping(): { [key: string]: any } {\n        return globalConfigurationMapping;\n    }\n\n    /**\n     * Defines an endpoint for a kind of service.\n     */\n    addEndPoint(name: string, tag: number, options: IBackboneOptions) {\n        const cfgMapping = this.configurationMapping;\n        const dataflow = this._dataflow;\n        const uniqueName = this._uniqueNamePrefix + name;\n\n        if (cfgMapping[uniqueName]) {\n            throw new Error('Redefined endpoint: ' + name);\n        }\n        cfgMapping[uniqueName] = {\n            options: _.extend(options, { endPointKey: uniqueName }),\n            tag: tag\n        };\n\n        this._myEndPointKeys.push(uniqueName);\n\n        // Set up data flow nodes (it is enough to use local names)\n        if (tag === endPointEnum.model) {\n            for (const k in syncMethodEnum) {\n                // skip loop if the property is from prototype\n                if (syncMethodEnum.hasOwnProperty(k)) {\n                    const value = syncMethodEnum[k];\n                    dataflow[name + ':' + value] = 1;\n                }\n            }\n        } else {\n            dataflow[name + ':' + syncMethodEnum.read] = 1;\n        }\n    }\n\n    /**\n     * Retrieves the endpoint by the given name.\n     */\n    getEndPoint(name: string, ignoreCache?: boolean) {\n        const cache = this._cache;\n        const uniqueName = this._uniqueNamePrefix + name;\n\n        if (ignoreCache !== true) {\n            const cachedValue = cache.get(uniqueName);\n            if (cachedValue) {\n                return cachedValue;\n            }\n        }\n\n        const cfgMapping = this.configurationMapping;\n\n        const cfg = cfgMapping[uniqueName];\n        if (!cfg) {\n            const error = new Error('No given endpoint is defined for: ' + name);\n            throw error;\n        }\n\n        let value = null;\n        if (cfg.tag === endPointEnum.model) {\n            value = backbone.Model.extend(cfg.options);\n        } else if (cfg.tag === endPointEnum.collection) {\n            value = backbone.Collection.extend(cfg.options);\n        } else if (cfg.tag === endPointEnum.pagedCollection) {\n            value = backbone.PageableCollection.extend(cfg.options);\n        } else {\n            throw new Error('Not implemented');\n        }\n\n        if (ignoreCache !== true) {\n            cache.set(uniqueName, value, defaultLivePeroid);\n        }\n        return value;\n    }\n\n    /**\n     * Get the underlying configuration for an endpoint.\n     */\n    getConfiguration(endPointKey: string) {\n        const uniqueName = this._uniqueNamePrefix + endPointKey;\n        const cfgMapping = this.configurationMapping;\n        return cfgMapping[uniqueName];\n    }\n\n    /**\n     * Provides the callback when some operations happen.\n     */\n    addWhenCallback(name: string[], callback: any) {\n        const dataflow = this._dataflow;\n        dataflow.when(name, callback);\n    }\n\n    /**\n     * Defines the dependency.\n     */\n    addDependency(src: string, dst: string) {\n        const dataflow = this._dataflow;\n        dataflow.on(src, function() {\n            dataflow[dst] = dataflow[dst] + 1;\n        });\n    }\n\n    /**\n     * Clean up all cached data provider\n     */\n    cleanupCache() {\n        // Remove what we have in cache\n        this._cache.reset();\n    }\n\n    cleanMountedFeatures() {\n        mountedFeatureRemovers.forEach(function(remover) {\n            remover.remove();\n        });\n        mountedFeatureRemovers.length = 0;\n    }\n\n    /**\n     * Destroy the provider to release resources\n     */\n    destroy() {\n        // Delete cache\n        this._myEndPointKeys.forEach(function(k) {\n            delete globalConfigurationMapping[k];\n        });\n\n        this._myEndPointKeys.length = 0;\n\n        this._cache.destroy();\n\n        // No destroy methods for the following two instances.\n        this._cache = null;\n        this._dataflow = null;\n        this._host = null;\n        this._uniqueNamePrefix = null;\n    }\n}\n\n\n\n","/**\n * @fileOverview\n * Provides type-safety operations of manipulating LocalStorage data.\n * @name LocalStorageUtil.js\n * @module hypercom/storage/LocalStorageUtil\n * @author Xiaolong Tang <xxlongtang@gmail.com>\n * @license Copyright @me\n */\nimport * as externalInterface from '@polpware/fe-dependencies';\n// as polyfill for localstorage\n// Do NOT use the LocalStorage as there is global variable which cannot be resolved\n// and which is defined only in TINYMCE.\n// import * as localStorage from 'polpware-tinymce-tailor/src/util/LocalStorage.js';\n\nconst globalLocalStorage = window.localStorage;\n\nimport {\n    defaultValue,\n    ITypeDef,\n    tyArray,\n    ok as isType\n} from '@polpware/fe-utilities';\n\nconst _ = externalInterface.underscore,\n    find = _.find,\n    findIndex = _.findIndex,\n    union = _.union;\n\nexport interface IEntity {\n    Id: any;\n}\n\n/**\n * Reads the value of an entity by its key.\n * @function getEntity\n * @param {String} key The entity key.\n * @param {*} ty The type of the entity value.\n * @returns {*} The entity value.\n */\n\nexport function getEntity(key: string, ty: ITypeDef): any {\n    let data = defaultValue(ty);\n    try {\n        let tmp = globalLocalStorage.getItem(key);\n        if (tmp && tmp !== 'undefined') {\n            tmp = JSON.parse(tmp);\n            if (isType(tmp, ty)) {\n                data = tmp;\n            }\n        }\n    } catch (ex) {\n        console.log(ex);\n    }\n    return data;\n}\n/**\n * Updates the value of an entity by its key.\n * @function updateEntity\n * @param {String} key The entity key.\n * @param {*} data The new value to be replaced with.\n * @param {*} ty The type of the entity value.\n */\nexport function updateEntity(key: string, data: any, ty: ITypeDef = null) {\n    try {\n        globalLocalStorage.setItem(key, JSON.stringify(data));\n    } catch (ex) {\n        console.log(ex);\n    }\n}\n/**\n * Cleans the value of an entity by its key.\n * @function cleanEntity\n * @param {String} key The entity key.\n * @param {*} ty The type of the entity value.\n */\nexport function cleanEntity(key: string, ty: ITypeDef) {\n    try {\n        globalLocalStorage.setItem(key, JSON.stringify(defaultValue(ty)));\n    } catch (ex) {\n        console.log(ex);\n    }\n}\n/**\n * Inserts the given data into the value of an entity of type array.\n * Note that the inserted data should be disjoint with the current data\n * stored in this entity. Otherwise, the behavior may be undefined.\n * @function insertEntities\n * @param {String} key The entity key.\n * @param {Array} data The value to be inserted.\n * @param {Number} upperBound The max number of elements allows for this entity value.\n */\nexport function insertEntities(key: string, data: Array<IEntity>, upperBound: number) {\n    let newData = [];\n    const currentData = getEntity(key, tyArray) as Array<IEntity>;\n    if (upperBound > 0 && currentData.length > upperBound) {\n        newData = data;\n    } else {\n        newData = union(currentData, data);\n    }\n    updateEntity(key, newData, tyArray);\n}\n/**\n * Finds one element of an entity of type array.\n * @function findEntityById\n * @param {String} key The entity key.\n * @param {Number} id The identifier value. An Id field is assumed for each element.\n * @returns {*} The value of the found element.\n */\nexport function findEntityById(key: string, id): IEntity {\n    const data = getEntity(key, tyArray) as Array<IEntity>;\n    return find(data, { Id: id });\n}\n\n/**\n * Removes an element of an entity of type array.\n * @function removeEntityById\n * @param {String} key The entity key.\n * @param {Number} id The identifier value for the element to be removed.\n */\nexport function removeEntityById(key: string, id) {\n    const data = getEntity(key, tyArray) as Array<IEntity>;\n    const index = findIndex(data, { Id: id });\n    if (index === -1) {\n        return;\n    }\n    data.splice(index, 1);\n    updateEntity(key, data, tyArray);\n}\n/**\n * Inserts or udpates an element of an entity of type array.\n * @function insertOrUpdateEntity\n * @param {String} key The entity key.\n * @param {Array} entity The new value of the entity.\n */\nexport function insertOrUpdateEntity(key: string, entity: IEntity) {\n    const data = getEntity(key, tyArray) as Array<IEntity>;\n    const index = findIndex(data, { Id: entity.Id });\n    if (index !== -1) {\n        data[index] = entity;\n    } else {\n        data.push(entity);\n    }\n    updateEntity(key, data, tyArray);\n}\n/**\n * Removes a group of entities by a given prefix.\n * @function cleanEntityGroup\n * @param {String} prefix The prefix of the keys of the entities to be removed. We organize entities somewhat hirarchly.\n * @returns {Boolean}\n */\nexport function cleanEntityGroup(prefix: string): Array<string> {\n    const keys = [];\n    for (const p in globalLocalStorage) {\n        if (globalLocalStorage.hasOwnProperty(p) &&\n            p.indexOf(prefix) === 0) {\n            keys.push(p);\n        }\n    }\n    if (keys.length === 0) {\n        return keys;\n    }\n    keys.forEach(function(k) {\n        globalLocalStorage.removeItem(k);\n    });\n    return keys;\n}\n","/**\n * @fileOverview\n * Encapsulates the local storage service into one\n * providing prmoise-aware services.\n * @name LocalStorageTable.js\n * @module hypercom/storage/LocalStorageTable\n * @author Xiaolong Tang <xxlongtang@gmail.com>\n * @license Copyright @me\n */\n\nimport * as polpwareUtil from '@polpware/fe-utilities';\n\nimport * as localStorageUtil from './localstorage-util';\n\n/**\n * @class LocalStorageTable\n */\nexport class LocalStorageTable {\n\n    /**\n     * Gets the value for the given key.\n     * @function getP\n     * @param {String} key The key to be searched for.\n     * @returns {Promise}\n     * @throws {Error}\n     */\n    getP(key: string): PromiseLike<object> {\n        const data = localStorageUtil.getEntity(key, polpwareUtil.tyObject);\n        return polpwareUtil.lift(data, null);\n    }\n\n    /**\n     * Removes the key from the keychain.\n     * @function removeP\n     * @param {String} key The key to be removed.\n     * @returns {Promise}\n     * @throws {Error}\n     */\n    removeP(key: string): PromiseLike<boolean> {\n        localStorageUtil.cleanEntity(key, polpwareUtil.tyObject);\n        return polpwareUtil.lift(true, null);\n    }\n\n    /**\n     * Updates the value for the given key.\n     * @param {String} key The key to be searched for.\n     * @param {Object} value The new value.\n     * @returns {Promise}\n     * @throws {Error}\n     */\n    updateP(key: string, value: object): PromiseLike<boolean> {\n        localStorageUtil.updateEntity(key, value, polpwareUtil.tyObject);\n        return polpwareUtil.lift(true, null);\n    }\n\n}\n","/**\n * @fileOverview\n * Provides i18n service. This module is designed as\n * a delegate of the tinymce I18n service.\n * @author Xiaolong Tang <xxlongtang@gmail.com>\n * @license Copyright @me\n */\n\nimport * as dependencies from '@polpware/fe-dependencies';\n\nconst _i18n = dependencies.I18n;\n\nexport class I18n {\n\n    static getDictByCode(code: string) {\n        return _i18n.data[code];\n    }\n\n    /**\n     * Add a languge dictionary and set the current\n     * code as the current language.\n     */\n    static add(code: string, items: any) {\n        _i18n.add(code, items);\n    }\n\n    /**\n     * Trnsaltes a given text. If the given text\n     * is missing in the dictionary, use the given default value.\n     * @function translate\n     * @param {String} text A text to be translated.\n     * @param {String} defaultText The default value.\n     * @returns {String} The translation for the given text.\n     */\n    static translate(text: string, defaultText: string) {\n        const value = _i18n.translate(text);\n        if (value === text && defaultText) {\n            return defaultText;\n        }\n        return value;\n    }\n\n    /**\n     * Removes unused languages to release memory.\n     * @function recycleOthers\n     * @param {String} code The language code which should not released.\n     */\n    static recycleOthers(code: string) {\n        const data = _i18n.data;\n        const recycleList = [];\n        for (const key in data) {\n            // skip loop if the property is from prototype\n            if (data.hasOwnProperty(key) && key !== code) {\n                recycleList.push(key);\n            }\n        }\n        /*jslint plusplus: true */\n        for (let i = 0; i < recycleList.length; i++) {\n            const k = recycleList[i];\n            delete data[k];\n        }\n    }\n}\n","/**\n * @fileOverview\n * Defines a Resources class.\n * With this class, you may configure a bunch of resources\n * accessible from global URIs, such as URLs.\n * Once the requested resources are loaded, they may be\n * cached in the memory.\n * Note that the resources are expected to be organized in\n * a common namespace hierarchy.\n * E.g.,\n * x.y.z corresponds to a json resource like:\n *    {\n *       y: {\n *             z: 112\n *          }\n *    }\n * @author Xiaolong Tang <xxlongtang@gmail.com>\n * @license Copyright @me\n */\n\n\nimport * as externalInterface from '@polpware/fe-dependencies';\nimport { replace, lift, convert } from '@polpware/fe-utilities';\n\nimport { ISlidingExpireCache } from '../cache/sliding-expire-cache.interface';\n\nimport { loadJsonUriP } from '../net/curl';\n\n\nconst _ = externalInterface.underscore;\nconst isString = _.isString;\n\n\n/**\n * Retrieves a value from a variable by a given namespace nested structure.\n * @function getByNamespace\n * @param {Object} repo\n * @param {*} fullyQualifiedNamespace A string or an arry of string defining the namespace.\n * @param {Number}[] startLevel\n * @returns {*}\n */\nfunction getByNamespace<T>(repo: { [key: string]: T },\n    identifiers: Array<string>,\n    startLevel: number = 1): T {\n\n    const restIdentifiers = identifiers.slice(startLevel);\n    const restKey = restIdentifiers.join('.');\n    if (repo[restKey]) {\n        return repo[restKey];\n    }\n\n    let initRepo: any = repo;\n    for (let index = startLevel; index < identifiers.length; index++) {\n        if (!initRepo) {\n            break;\n        }\n        const key = identifiers[index];\n        initRepo = initRepo[key];\n    }\n    return initRepo;\n}\n\ninterface IConfigurationEntry {\n    uri: string;\n    liveSeconds: number;\n}\n\n/**\n * @class Resources\n */\nexport class ResourceLoader {\n\n    private _configuration: { [key: string]: IConfigurationEntry };\n\n    /**\n     * Constructor\n     * @function init\n     */\n    constructor(private _cache: ISlidingExpireCache<any> = null) {\n        this._configuration = {};\n    }\n\n    /**\n     * Configure a resource\n     * @function register\n     * @param {String} key The resource key.\n     * @param {String} uri The resource URI.\n     * @param {Number} liveSeconds The cache period.\n     * @throws {Error}\n     */\n    register(key: string, uri: string, liveSeconds: number = 60) {\n        const configuration = this._configuration;\n        if (configuration[key]) {\n            throw new Error('Registering an existing resource key: ' + key);\n        }\n        configuration[key] = {\n            uri: uri,\n            liveSeconds: liveSeconds\n        };\n    }\n\n    /**\n     * Removes a registered item\n     * @function undoRegister\n     * @param {String} key The resource key to be removed.\n     */\n    undoRegister(key: string) {\n        const configuration = this._configuration;\n        if (configuration[key]) {\n            delete configuration[key];\n        }\n    }\n    /**\n     * Returns a promise for the resource key.\n     * @function getPromise\n     * @param {String} fullyQualifiedNamespace The resource key.\n     * @returns {*} The resource value.\n     * @throws {Error}\n     */\n    getPromise<T>(fullyQualifiedNamespace: string,\n        convertor: (any) => any): PromiseLike<T> {\n        const identifiers = fullyQualifiedNamespace.split('.');\n        const topIdentifier = identifiers[0];\n        const cache = this._cache;\n        if (cache) {\n            // Figure out the master key\n            const repo = cache.get(topIdentifier, 60);\n            if (repo) {\n                const value = getByNamespace<T>(repo, identifiers);\n                if (value) {\n                    // Return a promise\n                    return lift(value, null);\n                }\n            }\n        }\n\n        const entry = this._configuration[topIdentifier];\n        if (!entry) {\n            throw new Error('Get unregistered resource: ' + topIdentifier);\n        }\n\n        // Otherwise, load it\n        return loadJsonUriP(entry.uri).then((content) => {\n            content = convertor(content);\n            // Cache the new value\n            if (cache) {\n                cache.set(topIdentifier, content, entry.liveSeconds);\n            }\n            return getByNamespace(content, identifiers);\n        });\n    }\n}\n"]}